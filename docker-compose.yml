
version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - app-network
    environment:
      - NODE_ENV=production
      - VITE_API_URL=/api
    restart: always
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./server
      dockerfile: Dockerfile
      args:
        - NODE_ENV=production
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongo:27017/wildstore
      - PORT=3000
      - JWT_SECRET=${JWT_SECRET:-your_secure_jwt_secret_key}
      - CORS_ORIGIN=http://localhost,http://frontend
    networks:
      - app-network
    restart: always
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network
    restart: always
    environment:
      - MONGO_INITDB_DATABASE=wildstore
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  mongo-data:
    driver: local
