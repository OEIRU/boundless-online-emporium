
server {
    listen 80;
    
    # Serve static files directly
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;
    }
    
    # Proxy API requests to backend
    location /api/ {
        proxy_pass http://api:3000/api/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Улучшенное кеширование для GET запросов
        proxy_cache_methods GET;
        proxy_cache_valid 200 302 5m;
        proxy_cache_valid 404 1m;
        add_header X-Proxy-Cache $upstream_cache_status;
        
        # Использование ETag для уменьшения трафика
        proxy_set_header If-None-Match $http_if_none_match;
        proxy_set_header If-Modified-Since $http_if_modified_since;
        add_header ETag $upstream_http_etag always;
        add_header Last-Modified $upstream_http_last_modified always;
        
        # Предотвращение мерцания при повторных запросах
        proxy_cache_lock on;
        proxy_cache_lock_timeout 5s;
        proxy_cache_use_stale updating error timeout invalid_header http_500 http_502 http_503 http_504;
        
        # Кеш-контроль для предотвращения дубликатов запросов
        add_header Cache-Control "public, max-age=300, must-revalidate";
        expires 5m;
        
        # Предотвращение абортов запросов
        proxy_read_timeout 300s;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;
    }
    
    # Специальный маршрут для поисковых запросов с увеличенным временем кэширования
    location /api/products/search {
        proxy_pass http://api:3000/api/products/search;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        # Усиленное кеширование для поисковых запросов
        proxy_cache_methods GET;
        proxy_cache_valid 200 10m;
        proxy_ignore_headers Cache-Control Expires;
        add_header X-Proxy-Cache $upstream_cache_status;
        
        # Агрессивное кеширование для предотвращения множественных запросов
        proxy_cache_lock on;
        proxy_cache_lock_timeout 10s;
        proxy_cache_use_stale updating error timeout;
        
        # Заголовки для клиентского кеширования
        add_header Cache-Control "public, max-age=600, stale-while-revalidate=300";
        expires 10m;
    }
    
    # Специальный маршрут для автодополнения с минимальным временем кэширования
    location /api/products/autocomplete {
        proxy_pass http://api:3000/api/products/autocomplete;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Быстрое кеширование для автодополнения
        proxy_cache_methods GET;
        proxy_cache_valid 200 2m;
        add_header X-Proxy-Cache $upstream_cache_status;
        
        # Короткое время жизни кеша
        add_header Cache-Control "public, max-age=120";
        expires 2m;
    }
    
    # Оптимизация для категорий
    location /api/categories {
        proxy_pass http://api:3000/api/categories;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        
        # Долгое кеширование для категорий
        proxy_cache_methods GET;
        proxy_cache_valid 200 1h;
        add_header X-Proxy-Cache $upstream_cache_status;
        
        # Длительное время кеширования
        add_header Cache-Control "public, max-age=3600, stale-while-revalidate=1800";
        expires 1h;
    }
}
